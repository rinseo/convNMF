[{"path":"https://www.rinseopark.com/convNMF/articles/getting-started.html","id":"generate-synthetic-data","dir":"Articles","previous_headings":"","what":"1. Generate synthetic data","title":"Getting Started with convNMF","text":"","code":"set.seed(1) init <- generate(   num_channels=5, # number of channels   num_samples=1000, # number of samples   sample_freq=1000, # number of samples per unit time   num_neurons=2, # number of neurons   len_wavelet=10, # length of spikes   mean_spikes=10, # expected number of spikes per unit time   mean_amplitude=15, # alpha/beta of Gamma (alpha, beta)   shape_amplitude=3, # alpha of Gamma (alpha, beta)   noise_std=1 # MVN(0, noise_std^2) ) plot(init) # plot(init@data) # plot(init@amplitudes) # plot(init@wavelets) # plot(generate_wavelets(2, 5, 10))"},{"path":"https://www.rinseopark.com/convNMF/articles/getting-started.html","id":"fit-convnmf-model","dir":"Articles","previous_headings":"","what":"2. Fit ConvNMF model","title":"Getting Started with convNMF","text":"","code":"est <- convNMF(   data=init@data@value, # multi-channel time-series array (NxT)   sample_freq=1000, # number of samples per unit time   num_neurons=2, # number of neurons   len_wavelet=10, # length of spikes   mean_spikes=10, # expected number of spikes per unit time   mean_amplitude=15, # alpha/beta of Gamma (alpha, beta)   shape_amplitude=3, # alpha of Gamma (alpha, beta)   noise_std=1, # MVN(0, noise_std^2)   amp_rate=5, # detect amplitudes (amp_rate) times higher than SD   wavelet_rank=1, # dimension reduction in SVD   num_iters=50, # number of iterations   tol=1e-04, # tolerance level   weight_wavelets=FALSE # re-normalize wavelets for behavioral data ) ## Using (N x T) = (5 x 1000) data. ## Generating (K x N x D) = (2 x 5 x 10) wavelets. ## Initializing (K x T) = (2 x 1000) amplitudes. ## Iteration [8/50] Convergence detected! plot(est) plot(est@lls, type=\"b\", xlab=\"Iteration\", ylab=\"Normalized Log Likelihood\")"},{"path":"https://www.rinseopark.com/convNMF/articles/getting-started.html","id":"evaluate-the-model","dir":"Articles","previous_headings":"","what":"3. Evaluate the model","title":"Getting Started with convNMF","text":"","code":"plot(init@data)+labs(title=\"Reference\")+   plot(predict(est))+labs(title=\"Prediction\") sprintf(\"logLik = %.2f\",logLik(est)) ## [1] \"logLik = -7309.34\" sprintf(\"%% power explained = %.2f\",power_explained(est)) ## [1] \"% power explained = 0.41\" sprintf(\"Sequenciness = %.2f\",sequenciness(est)) ## [1] \"Sequenciness = 0.92\" confusion_matrix(init, est) ##                      (Prediction) ##                        Positive   Negative ## (Reference) Positive        420          0 ##             Negative         26       4554 ## ------------------------------------------ ##             Accuracy: TP/(TP+FN+FP) = 0.94  ##               Recall: TP/(TP+FN)    = 0.94  ##            Precision: TP/(TP+FP)    = 1.00  ##            Miss rate: FN/(TP+FN)    = 0.06  ## False discovery rate: FP/(TP+FP)    = 0.00 # extract_spikes(est) # based on 95% spikes"},{"path":"https://www.rinseopark.com/convNMF/articles/getting-started.html","id":"estimate-optimal-k-based-on-model-stability","dir":"Articles","previous_headings":"","what":"4. Estimate optimal K based on model stability","title":"Getting Started with convNMF","text":"","code":"max_K <- 5 diss_list <- rep(NA, max_K) for(K in 1:max_K){   diss_list[K] <- compute_diss_matrix(est, num_neurons=K)$mean_diss   print(sprintf(\"%d: %.2f\",K,diss_list[K])) } ## [1] \"1: 0.03\" ## [1] \"2: 0.05\" ## [1] \"3: 0.23\" ## [1] \"4: 0.36\" ## [1] \"5: 0.45\" plot(diss_list, type=\"b\", xlab=\"K\", ylab=\"Dissimiliarity\")"},{"path":"https://www.rinseopark.com/convNMF/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rinseo Park. Author, maintainer.","code":""},{"path":"https://www.rinseopark.com/convNMF/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Park R (2025). convNMF: Convolutional Non-Negative Matrix Factorization Multi-Channel Time-Series. R package version 0.1.0, https://github.com/rinseo/convNMF.","code":"@Manual{,   title = {convNMF: Convolutional Non-Negative Matrix Factorization for Multi-Channel Time-Series},   author = {Rinseo Park},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/rinseo/convNMF}, }"},{"path":"https://www.rinseopark.com/convNMF/index.html","id":"convnmf","dir":"","previous_headings":"","what":"Convolutional Non-Negative Matrix Factorization for Multi-Channel Time-Series","title":"Convolutional Non-Negative Matrix Factorization for Multi-Channel Time-Series","text":"package implements convolutional NMF spike modeling multi-channel time-series data.","code":"# Install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"rinseo/convNMF\")"},{"path":"https://www.rinseopark.com/convNMF/reference/Amplitudes-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Amplitudes Class — Amplitudes-class","title":"Amplitudes Class — Amplitudes-class","text":"Stores temporal amplitudes.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/Amplitudes-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Amplitudes Class — Amplitudes-class","text":"value 2D array [neurons × time] temporal amplitudes. num_neurons Number neurons. num_samples Number time points.","code":""},{"path":[]},{"path":"https://www.rinseopark.com/convNMF/reference/ConvNMF-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ConvNMF Class — ConvNMF-class","title":"ConvNMF Class — ConvNMF-class","text":"Stores multi-channel time-series data, spatial wavelets, temporal amplitudes.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/ConvNMF-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ConvNMF Class — ConvNMF-class","text":"wavelets object Wavelets-class. amplitudes object Amplitudes-class. data object Data-class. lls numeric vector normalized log likelihood values iterations fitted objects. fit_args Named arguments passed convNMF.","code":""},{"path":[]},{"path":"https://www.rinseopark.com/convNMF/reference/Data-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Class — Data-class","title":"Data Class — Data-class","text":"Stores multi-channel time-series data.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/Data-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Data Class — Data-class","text":"value 2D array [channels × time] input data. num_channels Number channels (electrodes/tasks). num_samples Number time points. channel_order Order channels. channel_labels List channel labels.","code":""},{"path":[]},{"path":"https://www.rinseopark.com/convNMF/reference/Wavelets-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Wavelets Class — Wavelets-class","title":"Wavelets Class — Wavelets-class","text":"Stores spatial wavelets.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/Wavelets-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Wavelets Class — Wavelets-class","text":"value 3D array [neurons × channels × delay] spatial wavelets. num_neurons Number neurons. num_channels Number channels (electrodes/tasks). len_wavelet Length spatial wavelet (samples). weights Weights re-normalization. channel_order Order channels. channel_labels List channel labels.","code":""},{"path":[]},{"path":"https://www.rinseopark.com/convNMF/reference/compute_diss_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate ConvNMF Stability via Repeated Dissimilarity Scores — compute_diss_matrix","title":"Estimate ConvNMF Stability via Repeated Dissimilarity Scores — compute_diss_matrix","text":"Re-fits given ConvNMF model multiple times computes dissimilarity scores comparing original model new fit.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/compute_diss_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate ConvNMF Stability via Repeated Dissimilarity Scores — compute_diss_matrix","text":"","code":"# S4 method for class 'ConvNMF' compute_diss_matrix(object, num_iters = 20, ...)"},{"path":"https://www.rinseopark.com/convNMF/reference/compute_diss_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate ConvNMF Stability via Repeated Dissimilarity Scores — compute_diss_matrix","text":"object fitted ConvNMF-class object. Used define data hyperparameters. num_iters Integer. Number re-fits perform. Defaults 20. ... Additional arguments passed update function.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/compute_diss_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate ConvNMF Stability via Repeated Dissimilarity Scores — compute_diss_matrix","text":"list : diss_matrix symmetric matrix pairwise dissimilarity scores. mean_diss mean dissimilarity across model pairs.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/compute_diss_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate ConvNMF Stability via Repeated Dissimilarity Scores — compute_diss_matrix","text":"Mackevicius, E. L., Bahle, . H., Williams, . H., Gu, S., Denisenko, N. ., Goldman, M. S., & Fee, M. S. (2019). Unsupervised discovery temporal sequences high-dimensional datasets, applications neuroscience.","code":""},{"path":[]},{"path":"https://www.rinseopark.com/convNMF/reference/confusion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Confusion Matrix for ConvNMF Model — confusion_matrix","title":"Compute Confusion Matrix for ConvNMF Model — confusion_matrix","text":"Compares ground-truth predicted spike labels compute confusion matrix.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/confusion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Confusion Matrix for ConvNMF Model — confusion_matrix","text":"","code":"# S4 method for class 'ConvNMF,ConvNMF' confusion_matrix(object1, object2)"},{"path":"https://www.rinseopark.com/convNMF/reference/confusion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Confusion Matrix for ConvNMF Model — confusion_matrix","text":"object1 synthetic ConvNMF-class object true labels using generate function. object2 fitted ConvNMF-class object predicted labels fitting convNMF model. spikes Default \"auto\" uses extract_spikes function.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/confusion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Confusion Matrix for ConvNMF Model — confusion_matrix","text":"2x2 confusion matrix.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/confusion_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Confusion Matrix for ConvNMF Model — confusion_matrix","text":"Buccino, . P., Hurwitz, C. L., Garcia, S., Magland, J., Siegle, J. H., Hurwitz, R., & Hennig, M. H. (2020). SpikeInterface, unified framework spike sorting. eLife, 9, e61834. doi:10.7554/eLife.61834","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/convNMF.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit ConvNMF Model — convNMF","title":"Fit ConvNMF Model — convNMF","text":"Fits convolutional NMF model multi-channel time-series data using MAP estimation.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/convNMF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit ConvNMF Model — convNMF","text":"","code":"convNMF(   data,   sample_freq,   num_neurons,   len_wavelet,   mean_spikes = 10,   mean_amplitude = 15,   shape_amplitude = 3,   noise_std = 1,   amp_rate = 3,   wavelet_rank = 1,   num_iters = 50,   tol = 1e-06,   weight_wavelets = FALSE,   show_progress = TRUE )"},{"path":"https://www.rinseopark.com/convNMF/reference/convNMF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit ConvNMF Model — convNMF","text":"data Matrix dimensions num_channels × num_samples. sample_freq Sampling frequency (Hz). num_neurons Number neurons fitted. mean_spikes Expected number spikes per unit time. mean_amplitude Mean Gamma distribution amplitudes. shape_amplitude Shape Gamma distribution amplitudes. noise_std Standard deviation Gaussian noise. amp_rate Detection threshold SD units. wavelet_rank SVD rank wavelet decomposition. num_iters Maximum number MAP iterations. tol Convergence tolerance. len_waveletf Length spatial wavelet (samples).","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/convNMF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit ConvNMF Model — convNMF","text":"fitted ConvNMF-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/diss.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Dissimilarity Between Two ConvNMF Models — diss","title":"Compute Dissimilarity Between Two ConvNMF Models — diss","text":"Calculates dissimilarity score two ConvNMF-class models comparing reconstructed factor matrices.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/diss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Dissimilarity Between Two ConvNMF Models — diss","text":"","code":"# S4 method for class 'ConvNMF,ConvNMF' diss(object1, object2)"},{"path":"https://www.rinseopark.com/convNMF/reference/diss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Dissimilarity Between Two ConvNMF Models — diss","text":"object1 fitted ConvNMF-class object (first model). object2 fitted ConvNMF-class object (second model).","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/diss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Dissimilarity Between Two ConvNMF Models — diss","text":"numeric scalar indicating dissimilarity score two models. Values closer 0 indicate high similarity stability factorizations.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/diss.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Dissimilarity Between Two ConvNMF Models — diss","text":"Mackevicius, E. L., Bahle, . H., Williams, . H., Gu, S., Denisenko, N. ., Goldman, M. S., & Fee, M. S. (2019). Unsupervised discovery temporal sequences high-dimensional datasets, applications neuroscience. eLife, 8, e38471. doi:10.7554/eLife.38471","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/extract_spikes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Spikes from ConvNMF Model — extract_spikes","title":"Extract Spikes from ConvNMF Model — extract_spikes","text":"Identifies spike occurrences based fitted wavelets amplitudes.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/extract_spikes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Spikes from ConvNMF Model — extract_spikes","text":"","code":"# S4 method for class 'ConvNMF' extract_spikes(object, spike_threshold = 0.95)"},{"path":"https://www.rinseopark.com/convNMF/reference/extract_spikes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Spikes from ConvNMF Model — extract_spikes","text":"object fitted ConvNMF-class object. spike_threshold Quantile threshold spike sorting.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/extract_spikes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Spikes from ConvNMF Model — extract_spikes","text":"tibble detected spikes (k=neuron, n=channel, t=time).","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Synthetic Neural Data — generate","title":"Generate Synthetic Neural Data — generate","text":"Simulates multi-channel time-series data spatial wavelets temporal amplitudes.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Synthetic Neural Data — generate","text":"","code":"generate(   num_channels,   num_samples,   sample_freq,   num_neurons,   len_wavelet,   mean_spikes = 10,   mean_amplitude = 15,   shape_amplitude = 3,   noise_std = 1 )"},{"path":"https://www.rinseopark.com/convNMF/reference/generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Synthetic Neural Data — generate","text":"num_channels Number channels (electrodes/tasks). num_samples Number time points. sample_freq Sampling frequency (Hz). num_neurons Number neurons simulate. len_wavelet Length spatial wavelet (samples). mean_spikes Expected number spikes per unit time. mean_amplitude Mean Gamma distribution amplitudes. shape_amplitude Shape Gamma distribution amplitudes. noise_std Standard deviation Gaussian noise.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/generate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Synthetic Neural Data — generate","text":"synthetic ConvNMF-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/generate_wavelets.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Spatial Wavelets — generate_wavelets","title":"Generate Random Spatial Wavelets — generate_wavelets","text":"Creates set random spatial wavelets simulated neurons across multiple channels.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/generate_wavelets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Spatial Wavelets — generate_wavelets","text":"","code":"generate_wavelets(num_neurons, num_channels, len_wavelet)"},{"path":"https://www.rinseopark.com/convNMF/reference/generate_wavelets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Spatial Wavelets — generate_wavelets","text":"num_neurons Number neurons simulate. num_channels Number channels (electrodes/tasks). len_wavelet Length spatial wavelet (samples).","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/generate_wavelets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Spatial Wavelets — generate_wavelets","text":"Wavelets-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/logLik.ConvNMF.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Likelihood of ConvNMF Model — logLik,ConvNMF-method","title":"Log Likelihood of ConvNMF Model — logLik,ConvNMF-method","text":"Returns (un-normalized) log likelihood fitted ConvNMF model.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/logLik.ConvNMF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Likelihood of ConvNMF Model — logLik,ConvNMF-method","text":"","code":"# S4 method for class 'ConvNMF' logLik(object)"},{"path":"https://www.rinseopark.com/convNMF/reference/logLik.ConvNMF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Likelihood of ConvNMF Model — logLik,ConvNMF-method","text":"object fitted ConvNMF-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/logLik.ConvNMF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Likelihood of ConvNMF Model — logLik,ConvNMF-method","text":"numeric scalar representing log likelihood.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Amplitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for Amplitudes Objects — plot,Amplitudes-method","title":"Plot Method for Amplitudes Objects — plot,Amplitudes-method","text":"Plot Method Amplitudes Objects","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Amplitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for Amplitudes Objects — plot,Amplitudes-method","text":"","code":"# S4 method for class 'Amplitudes' plot(x)"},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Amplitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for Amplitudes Objects — plot,Amplitudes-method","text":"x Amplitudes-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Amplitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for Amplitudes Objects — plot,Amplitudes-method","text":"ggplot2 object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.ConvNMF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for ConvNMF Objects — plot,ConvNMF-method","title":"Plot Method for ConvNMF Objects — plot,ConvNMF-method","text":"Plot Method ConvNMF Objects","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.ConvNMF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for ConvNMF Objects — plot,ConvNMF-method","text":"","code":"# S4 method for class 'ConvNMF' plot(x, spikes = \"auto\", spike_threshold = 0.95)"},{"path":"https://www.rinseopark.com/convNMF/reference/plot.ConvNMF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for ConvNMF Objects — plot,ConvNMF-method","text":"x ConvNMF-class object. spikes Mode spike overlay. Options \"auto\" \"none\". spike_threshold Threshold spike sorting spikes = \"auto\"","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.ConvNMF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for ConvNMF Objects — plot,ConvNMF-method","text":"ggplot2 object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for Data Objects — plot,Data-method","title":"Plot Method for Data Objects — plot,Data-method","text":"Plot Method Data Objects","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for Data Objects — plot,Data-method","text":"","code":"# S4 method for class 'Data' plot(x)"},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for Data Objects — plot,Data-method","text":"x Data-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for Data Objects — plot,Data-method","text":"ggplot2 object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Wavelets.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for Wavelets Objects — plot,Wavelets-method","title":"Plot Method for Wavelets Objects — plot,Wavelets-method","text":"Plot Method Wavelets Objects","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Wavelets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for Wavelets Objects — plot,Wavelets-method","text":"","code":"# S4 method for class 'Wavelets' plot(x)"},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Wavelets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for Wavelets Objects — plot,Wavelets-method","text":"x Wavelets-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/plot.Wavelets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for Wavelets Objects — plot,Wavelets-method","text":"ggplot2 object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/power_explained.html","id":null,"dir":"Reference","previous_headings":"","what":"Power Explained by ConvNMF Model — power_explained","title":"Power Explained by ConvNMF Model — power_explained","text":"Calculates percent power explained factorization.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/power_explained.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power Explained by ConvNMF Model — power_explained","text":"","code":"# S4 method for class 'ConvNMF' power_explained(object)"},{"path":"https://www.rinseopark.com/convNMF/reference/power_explained.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power Explained by ConvNMF Model — power_explained","text":"object fitted ConvNMF-class object. #' @references Mackevicius, E. L., Bahle, . H., Williams, . H., Gu, S., Denisenko, N. ., Goldman, M. S., & Fee, M. S. (2019). Unsupervised discovery temporal sequences high-dimensional datasets, applications neuroscience. eLife, 8, e38471. doi:10.7554/eLife.38471","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/power_explained.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power Explained by ConvNMF Model — power_explained","text":"numeric scalar representing \\(1 - \\frac{\\Sigma(\\bold{X} - \\hat{\\bold{X}})^2}{\\bold{X}^2}\\) value.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/predict.ConvNMF.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct Data from ConvNMF Model — predict,ConvNMF-method","title":"Reconstruct Data from ConvNMF Model — predict,ConvNMF-method","text":"Computes predicted data fitted wavelets amplitudes.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/predict.ConvNMF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct Data from ConvNMF Model — predict,ConvNMF-method","text":"","code":"# S4 method for class 'ConvNMF' predict(object)"},{"path":"https://www.rinseopark.com/convNMF/reference/predict.ConvNMF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct Data from ConvNMF Model — predict,ConvNMF-method","text":"object fitted ConvNMF-class object.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/predict.ConvNMF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct Data from ConvNMF Model — predict,ConvNMF-method","text":"matrix representing predicted data.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/sequenciness.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Sequenciness Score for ConvNMF Model — sequenciness","title":"Compute Sequenciness Score for ConvNMF Model — sequenciness","text":"Estimates \"sequenciness\" fitted ConvNMF-class object comparing power explained model actual data versus shuffled data.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/sequenciness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Sequenciness Score for ConvNMF Model — sequenciness","text":"","code":"# S4 method for class 'ConvNMF' sequenciness(object, num_shuffle = 20, num_iters = 20)"},{"path":"https://www.rinseopark.com/convNMF/reference/sequenciness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Sequenciness Score for ConvNMF Model — sequenciness","text":"object fitted ConvNMF-class object. num_shuffle Integer. Number shuffled datasets generate. Defaults 20. num_iters Integer. Number model fits run per shuffle. Defaults 20.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/sequenciness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Sequenciness Score for ConvNMF Model — sequenciness","text":"numeric value representing sequenciness score. Values closer 1 indicate stronger sequential patterns.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/sequenciness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Sequenciness Score for ConvNMF Model — sequenciness","text":"Mackevicius, E. L., Bahle, . H., Williams, . H., Gu, S., Denisenko, N. ., Goldman, M. S., & Fee, M. S. (2019). Unsupervised discovery temporal sequences high-dimensional datasets, applications neuroscience. eLife, 8, e38471. doi:10.7554/eLife.38471","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/update.ConvNMF.html","id":null,"dir":"Reference","previous_headings":"","what":"Update ConvNMF Model with New Parameters — update,ConvNMF-method","title":"Update ConvNMF Model with New Parameters — update,ConvNMF-method","text":"Refits ConvNMF model using updated model parameters.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/update.ConvNMF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update ConvNMF Model with New Parameters — update,ConvNMF-method","text":"","code":"# S4 method for class 'ConvNMF' update(object, ...)"},{"path":"https://www.rinseopark.com/convNMF/reference/update.ConvNMF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update ConvNMF Model with New Parameters — update,ConvNMF-method","text":"object ConvNMF-class object. ... Named arguments passed convNMF update model formula.","code":""},{"path":"https://www.rinseopark.com/convNMF/reference/update.ConvNMF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update ConvNMF Model with New Parameters — update,ConvNMF-method","text":"newly fitted ConvNMF object.","code":""}]
